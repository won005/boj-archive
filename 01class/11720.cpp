#include <iostream>
using namespace std;

int main()
{
    int a;
    string str;
    cin >> a >> str;

    int result = 0;
    for (char c : str)
    {
        result += c - '0';
    }
    cout << result;
}

//! 문제를 잘 읽자!!!!!!!!!!
// 문제 상황은 100개의 숫자가 주어지는 거다.
// 15자리 숫자가 한계인 int로는 절대 받을 수 없고, longlongㅌ타입으로도 19자리로 해결이 불가능하다.
// 이러면 string타입으로 바꿔서 생각해야한다.
/*
*이전 코드
{
    int count, num;
    cin >> count >> num; //82

    int temp = 0;
    for (int i = 0; i < count; i++)//0,1
    {
        temp += num % 10; //temp = 2, temp = 8%10 = 8
        num = num / 10; // 82/10 = 8 = num, num = 0;
    }
    cout << temp;
}
*/

//? 자료형 범위
/*
char : 1byte : -128 ~ 127
unsigned char : 1byte : 0 ~ 255
short : 2bytes : -32,728 ~ 32,767(3만) -> 5자리
int : 4bytes : -2,147,483,648 ~ 2,147,483,647(21억) -> 10자리
long long : 8bytes : -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807(992경) -> 19자리
*/

//? (int)c 캐스팅을 통해서 char -> int 로 변환하면 안되는거야?
/*
str = "54321"
'5' → (int)'5' = 53 (ASCII 코드!)
'4' → (int)'4' = 52
'3' → (int)'3' = 51
'2' → (int)'2' = 50
'1' → (int)'1' = 49
*/
//  예시와 같이 아스키코드로서 더해지기 때문에 답이 15가 아닌 255가 나오게됨

//* 정답은 단순하게 '5'-'0' = 5 를 통하여 문자를 숫자로 변환할 수 있다.

//? 문자끼리 빼면 왜 숫자가 나오는거야?
//  이것도 아스키코드에 답이 있다.
//  문자끼리 계산하게되면 아스키코드 값으로 연산을 하게 되는데
//  '5' -> 53 , '0' -> 48 --> 53-48 = 5 로 아스키코드로 빼도 연산이 가능하게 된다.
//! 이말은 숫자로된 문자로도 계산을 할 수 있다.